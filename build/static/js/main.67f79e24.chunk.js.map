{"version":3,"sources":["redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/contacts/contactsAction.js","redux/auth/authReducer.js","redux/auth/authActions.js","redux/contacts/contactsReducer.js","redux/store.js","routes.js","components/PrivateRoute.js","components/PublicRoute.js","components/UserMenu/UserMenu.js","components/Header/Header.js","components/App/App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","result","data","registerSeccess","registerError","logIn","loginRequest","loginSeccess","loginError","logOut","logoutRequest","logoutSeccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSeccess","getCurrentUserError","isAuthenticated","state","getUserEmail","user","email","getContactsRequest","createAction","getContactsSeccess","getContactsError","addContactRequest","addContactSeccess","addContactError","deleteContactRequest","deleteContactSeccess","deleteContactError","handleFilter","payload","target","value","initialUserState","name","createReducer","_","error","authPersistConfig","key","storage","whitelist","combineReducers","items","contactsAction","filter","contact","id","store","configureStore","reducer","contacts","contactReducer","persistReducer","authReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","REGISTER","PAUSE","PERSIST","PURGE","persistor","persistStore","path","label","exact","component","lazy","private","restricted","connect","authSelectors","Component","routeProps","render","props","to","avatar","onLogout","authOperations","className","src","alt","width","height","type","onClick","AppBar","position","Toolbar","activeClassName","App","this","onGetCurrentUser","fallback","routes","map","route","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.67f79e24.chunk.js","sourcesContent":["import axios from \"axios\";\nimport authActions from \"./authActions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n  try {\n    const result = await axios.post(\"/users/signup\", credentials);\n    token.set(result.data.token);\n    dispatch(authActions.registerSeccess(result.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error));\n  }\n};\n\nconst logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n  try {\n    const result = await axios.post(\"/users/login\", credentials);\n    token.set(result.data.token);\n    dispatch(authActions.loginSeccess(result.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error));\n  }\n};\n\nconst logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n    dispatch(authActions.logoutSeccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  try {\n    const result = await axios.get(\"/users/current\");\n    dispatch(authActions.getCurrentUserSeccess(result.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error));\n  }\n};\n\nexport default { register, logIn, logOut, getCurrentUser };\n","const isAuthenticated = (state) => state.auth.token;\n\nconst getUserEmail = (state) => state.auth.user.email;\n\nexport default { isAuthenticated, getUserEmail };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst getContactsRequest = createAction(\"@contact/getRequest\");\nconst getContactsSeccess = createAction(\"@contact/getSeccess\");\nconst getContactsError = createAction(\"@contact/getError\");\n\nconst addContactRequest = createAction(\"@contact/addRequest\");\nconst addContactSeccess = createAction(\"@contact/addSeccess\");\nconst addContactError = createAction(\"@contact/addError\");\n\nconst deleteContactRequest = createAction(\"@contact/deleteRequest\");\nconst deleteContactSeccess = createAction(\"@contact/deleteSeccess\");\nconst deleteContactError = createAction(\"@contact/deleteError\");\n\nconst handleFilter = createAction(\"@contact/filter\", ({ target }) => ({\n  payload: target.value,\n}));\n\nexport default {\n  getContactsRequest,\n  getContactsSeccess,\n  getContactsError,\n  addContactRequest,\n  addContactSeccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSeccess,\n  deleteContactError,\n  handleFilter,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport storage from \"redux-persist/lib/storage\";\nimport authActions from \"./authActions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSeccess]: (_, { payload }) => payload.user,\n  [authActions.loginSeccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSeccess]: () => initialUserState,\n  [authActions.getCurrentUserSeccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSeccess]: (_, { payload }) => payload.token,\n  [authActions.loginSeccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSeccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nexport const authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"@auth/registerRequest\");\nconst registerSeccess = createAction(\"@auth/registerSeccess\");\nconst registerError = createAction(\"@auth/registerError\");\n\nconst loginRequest = createAction(\"@auth/loginRequest\");\nconst loginSeccess = createAction(\"@auth/loginSeccess\");\nconst loginError = createAction(\"@auth/loginError\");\n\nconst logoutRequest = createAction(\"@auth/logoutRequest\");\nconst logoutSeccess = createAction(\"@auth/logoutSeccess\");\nconst logoutError = createAction(\"@auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"@auth/getCurrentUserRequest\");\nconst getCurrentUserSeccess = createAction(\"@auth/getCurrentUserSeccess\");\nconst getCurrentUserError = createAction(\"@auth/getCurrentUserError\");\n\nexport default {\n  registerRequest,\n  loginRequest,\n  logoutRequest,\n  getCurrentUserRequest,\n  registerError,\n  loginError,\n  logoutError,\n  getCurrentUserError,\n  registerSeccess,\n  loginSeccess,\n  logoutSeccess,\n  getCurrentUserSeccess,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsAction from \"./contactsAction\";\n\nconst removeContact = (state, { payload }) =>\n  state.filter((contact) => contact.id !== payload);\n\nconst items = createReducer([], {\n  [contactsAction.getContactsSeccess]: (_, { payload }) => payload,\n  [contactsAction.addContactSeccess]: (state, { payload }) => [\n    ...state,\n    payload,\n  ],\n  [contactsAction.deleteContactSeccess]: removeContact,\n});\n\nconst filter = createReducer(\"\", {\n  [contactsAction.handleFilter]: (state, { payload }) => (state = payload),\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  REGISTER,\n  PAUSE,\n  PERSIST,\n  PURGE,\n} from \"redux-persist\";\nimport contactReducer from \"./contacts/contactsReducer\";\nimport authReducer, { authPersistConfig } from \"./auth/authReducer\";\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  devTools: process.env.NODE_ENV !== \"production\",\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, REGISTER, PAUSE, PERSIST, PURGE],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","import { lazy } from \"react\";\n\nexport default [\n  {\n    path: \"/\",\n    label: \"Home\",\n    exact: true,\n    component: lazy(() => import(\"./containers/Home/Home\")),\n    private: false,\n    restricted: false,\n  },\n  {\n    path: \"/register\",\n    label: \"Register\",\n    exact: true,\n    component: lazy(() => import(\"./containers/Register/Register\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: \"/login\",\n    label: \"Login\",\n    exact: true,\n    component: lazy(() => import(\"./containers/Login/Login\")),\n    private: false,\n    restricted: true,\n  },\n  {\n    path: \"/contacts\",\n    label: \"Contacts\",\n    exact: true,\n    component: lazy(() => import(\"./containers/Contacts/Contacts\")),\n    private: true,\n    restricted: false,\n  },\n];\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { authSelectors } from \"../redux/auth\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { authSelectors } from \"../redux/auth\";\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  restricted,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated && restricted ? (\n        <Redirect to=\"/contacts\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../../redux/auth\";\nimport \"./UserMenu.css\";\n\nconst UserMenu = ({ avatar, email, onLogout }) => {\n  return (\n    <div className=\"avatar-wrapper\">\n      <div className=\"account-avatar\">\n        <img\n          className=\"avatar avatar--hover\"\n          src={avatar}\n          alt=\"User avatar\"\n          width=\"44\"\n          height=\"44\"\n        />\n      </div>\n      <span className=\"account-title\">{email}</span>\n      <button className=\"logout-btn\" type=\"button\" onClick={onLogout}>\n        Logout\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  email: authSelectors.getUserEmail(state),\n  avatar: \"https://i.ibb.co/Hg0JGFY/avatarko-anonim.jpg\",\n});\n\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\n  UserMenu\n);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { AppBar, Toolbar } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { authSelectors } from \"../../redux/auth\";\nimport UserMenu from \"../UserMenu/UserMenu\";\nimport \"./Header.css\";\n\nconst Header = ({ isAuthenticated }) => {\n  return (\n    <div className=\"Header\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <NavLink\n            exact\n            to=\"/\"\n            className=\"Navigation-link\"\n            activeClassName=\"Navigation-link-active\"\n          >\n            Home\n          </NavLink>\n\n          {isAuthenticated ? (\n            <>\n              <NavLink\n                to=\"/contacts\"\n                className=\"Navigation-link\"\n                activeClassName=\"Navigation-link-active\"\n              >\n                Contacts\n              </NavLink>\n\n              <UserMenu />\n            </>\n          ) : (\n            <>\n              <NavLink\n                to=\"/login\"\n                className=\"Navigation-link\"\n                activeClassName=\"Navigation-link-active\"\n              >\n                Login\n              </NavLink>\n              <NavLink\n                to=\"/register\"\n                className=\"Navigation-link\"\n                activeClassName=\"Navigation-link-active\"\n              >\n                Registration\n              </NavLink>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.isAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Header);\n\n// {\n//   routes.map((route) => (\n//     <NavLink\n//       key={route.label}\n//       to={route.path}\n//       exact={route.exact}\n//       className=\"Navigation-link\"\n//       activeClassName=\"Navigation-link-active\"\n//     >\n//       {route.label}\n//     </NavLink>\n//   ));\n// }\n","import React, { Component, Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { authOperations } from \"../../redux/auth\";\nimport PrivateRoute from \"../PrivateRoute\";\nimport PublicRoute from \"../PublicRoute\";\nimport Header from \"../Header/Header\";\nimport \"./App.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Header />\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <Switch>\n            {routes.map((route) =>\n              route.private ? (\n                <PrivateRoute key={route.label} {...route} />\n              ) : (\n                <PublicRoute\n                  key={route.label}\n                  {...route}\n                  restricted={route.restricted}\n                />\n              )\n            )}\n          </Switch>\n        </Suspense>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(null, {\n  onGetCurrentUser: authOperations.getCurrentUser,\n})(App);\n\n// import { Home, Login, Register, Contacts } from \"../../containers\";\n\n/* <Switch>\n  <PublicRoute path=\"/\" exact component={Home} restricted={false} />\n  <PublicRoute path=\"/login\" exact component={Login} restricted={true} />\n  <PublicRoute path=\"/register\" component={Register} restricted={true} />\n  <PrivateRoute path=\"/contacts\" exact component={Contacts} />\n  <Redirect to=\"/\" /> \n</Switch>; */\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}